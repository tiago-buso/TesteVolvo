// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteVolvo.Data;

#nullable disable

namespace TesteVolvo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220523214412_MigrationInicial")]
    partial class MigrationInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TesteVolvo.Models.BaseTruckModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("Description");

                    b.HasKey("Id");

                    b.ToTable("BaseTruckModel");
                });

            modelBuilder.Entity("TesteVolvo.Models.Truck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("TruckModelId")
                        .HasColumnType("int");

                    b.Property<int>("YearOfManufacture")
                        .HasColumnType("int")
                        .HasColumnName("YearOfManufacture");

                    b.HasKey("Id");

                    b.HasIndex("TruckModelId");

                    b.ToTable("Truck");
                });

            modelBuilder.Entity("TesteVolvo.Models.TruckModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BaseTruckModelId")
                        .HasColumnType("int");

                    b.Property<int>("YearOfModel")
                        .HasColumnType("int")
                        .HasColumnName("YearOfModel");

                    b.HasKey("Id");

                    b.HasIndex("BaseTruckModelId");

                    b.ToTable("TruckModel");
                });

            modelBuilder.Entity("TesteVolvo.Models.Truck", b =>
                {
                    b.HasOne("TesteVolvo.Models.TruckModel", "TruckModel")
                        .WithMany("Trucks")
                        .HasForeignKey("TruckModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TruckModel");
                });

            modelBuilder.Entity("TesteVolvo.Models.TruckModel", b =>
                {
                    b.HasOne("TesteVolvo.Models.BaseTruckModel", "BaseTruckModel")
                        .WithMany("TruckModels")
                        .HasForeignKey("BaseTruckModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaseTruckModel");
                });

            modelBuilder.Entity("TesteVolvo.Models.BaseTruckModel", b =>
                {
                    b.Navigation("TruckModels");
                });

            modelBuilder.Entity("TesteVolvo.Models.TruckModel", b =>
                {
                    b.Navigation("Trucks");
                });
#pragma warning restore 612, 618
        }
    }
}
